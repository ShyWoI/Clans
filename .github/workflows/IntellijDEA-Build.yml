name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    # Clona el repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # Configura Java (si tu proyecto usa Java para generar el .jar)
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'

    # Compila tu proyecto y genera el .jar (ajusta según tu build tool, aquí uso Maven como ejemplo)
    - name: Build JAR with Maven
      run: mvn clean package

    # Crea un directorio para los archivos del release
    - name: Prepare release directory
      run: |
        mkdir -p release
        cp target/*.jar out/artifacts/Clans_jar/Clans.jar  # Ajusta la ruta de tu .jar

    # Crea el archivo .zip y .tar.gz con el contenido deseado
    - name: Create ZIP and TAR
      run: |
        zip -r release/my-app.zip . -x "*.git*" "*.github*"
        tar -czvf release/my-app.tar.gz --exclude='.git' --exclude='.github' .

    # Crea el release en GitHub
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    # Sube el .jar al release
    - name: Upload JAR
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/my-app.jar
        asset_name: my-app.jar
        asset_content_type: application/java-archive

    # Sube el .zip al release
    - name: Upload ZIP
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/my-app.zip
        asset_name: my-app.zip
        asset_content_type: application/zip

    # Sube el .tar.gz al release
    - name: Upload TAR
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/my-app.tar.gz
        asset_name: my-app.tar.gz
        asset_content_type: application/gzip
